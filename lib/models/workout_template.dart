// models/workout_template.dart
import 'package:hive/hive.dart';
import 'package:fitness_kingdom/models/exercise.dart'; // Make sure this path is correct

part 'workout_template.g.dart'; // This file is generated by Hive

@HiveType(typeId: 1) // Unique type ID for Hive to differentiate this model
class WorkoutTemplate {
  @HiveField(0)
  final String id; // A unique identifier for this specific workout template (e.g., a UUID)

  @HiveField(1)
  final String name; // The name the user gives to their template (e.g., "Push Day", "Full Body Workout")

  @HiveField(2)    
  final List<ExerciseModel> exercises; // A list of the actual exercises included in this template.
                                       // ExerciseModel itself must also be a HiveObject and have its own Hive adapter.

  @HiveField(3)
  final DateTime creationDate; // The date and time when this template was first created.

  @HiveField(4)
  final DateTime? lastWorkoutDate; // An optional field to store the last time this template was used to start a workout.
                                   // It's nullable (?) because a new template hasn't been used yet.

  WorkoutTemplate({
    required this.id,
    required this.name,
    required this.exercises,
    required this.creationDate,
    this.lastWorkoutDate, // This is optional
  });

  // A copyWith method is often useful for immutable data models.
  // It allows you to create a new instance of WorkoutTemplate with some fields changed,
  // without modifying the original object. This is good practice for state management.
  WorkoutTemplate copyWith({
    String? id,
    String? name,
    List<ExerciseModel>? exercises,
    DateTime? creationDate,
    DateTime? lastWorkoutDate,
  }) {
    return WorkoutTemplate(
      id: id ?? this.id,
      name: name ?? this.name,
      exercises: exercises ?? this.exercises,
      creationDate: creationDate ?? this.creationDate,
      lastWorkoutDate: lastWorkoutDate ?? this.lastWorkoutDate,
    );
  }
}